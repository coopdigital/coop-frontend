{"version":3,"sources":["../../src/fields/passwords.mjs"],"names":["mask","field","setAttribute","unmask","toggleMaskUnmask","getAttribute","toggleAllMaskUnmask","fields","hasHiddenPasswords","Array","from","every","forEach"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACO,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAC7BA,EAAAA,KAAK,CAACC,YAAN,CAAmB,MAAnB,EAA2B,UAA3B;AACD,CAFM;AAIP;AACA;AACA;;;;;AACO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACF,KAAD,EAAW;AAC/BA,EAAAA,KAAK,CAACC,YAAN,CAAmB,MAAnB,EAA2B,MAA3B;AACD,CAFM;AAIP;AACA;AACA;;;;;AACO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACH,KAAD,EAAW;AACzC,MAAIA,KAAK,CAACI,YAAN,CAAmB,MAAnB,MAA+B,UAAnC,EAA+C;AAC7CF,IAAAA,MAAM,CAACF,KAAD,CAAN;AACD,GAFD,MAEO;AACLD,IAAAA,IAAI,CAACC,KAAD,CAAJ;AACD;AACF,CANM;AAQP;AACA;AACA;;;;;AACO,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,MAAD,EAAY;AAC7C,MAAMC,kBAAkB,GAAGC,KAAK,CAACC,IAAN,CAAWH,MAAX,EACxBI,KADwB,CAClB,UAACV,KAAD;AAAA,WAAWA,KAAK,CAACI,YAAN,CAAmB,MAAnB,MAA+B,UAA1C;AAAA,GADkB,CAA3B,CAD6C,CAI7C;;AACAI,EAAAA,KAAK,CAACC,IAAN,CAAWH,MAAX,EACGK,OADH,CACWJ,kBAAkB,GACvBL,MADuB,GAEvBH,IAHN;AAID,CATM","sourcesContent":["/**\n * Set field to type 'password'\n */\nexport const mask = (field) => {\n  field.setAttribute('type', 'password');\n};\n\n/**\n * Set field to type 'text'\n */\nexport const unmask = (field) => {\n  field.setAttribute('type', 'text');\n};\n\n/**\n * Toggle password field type\n */\nexport const toggleMaskUnmask = (field) => {\n  if (field.getAttribute('type') === 'password') {\n    unmask(field);\n  } else {\n    mask(field);\n  }\n};\n\n/**\n * Toggle password fields type\n */\nexport const toggleAllMaskUnmask = (fields) => {\n  const hasHiddenPasswords = Array.from(fields)\n    .every((field) => field.getAttribute('type') === 'password');\n\n  // Toggle show/hide\n  Array.from(fields)\n    .forEach(hasHiddenPasswords\n      ? unmask\n      : mask);\n};\n"],"file":"passwords.js"}